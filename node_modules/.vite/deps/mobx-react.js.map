{
  "version": 3,
  "sources": ["../../../../../../../../node_modules/mobx-react-lite/src/utils/assertEnvironment.ts", "../../../../../../../../node_modules/mobx-react-lite/src/utils/reactBatchedUpdates.ts", "../../../../../../../../node_modules/mobx-react-lite/src/utils/observerBatching.ts", "../../../../../../../../node_modules/mobx-react-lite/src/utils/utils.ts", "../../../../../../../../node_modules/mobx-react-lite/src/useObserver.ts", "../../../../../../../../node_modules/mobx-react-lite/src/utils/printDebugValue.ts", "../../../../../../../../node_modules/mobx-react-lite/src/utils/FinalizationRegistryWrapper.ts", "../../../../../../../../node_modules/mobx-react-lite/src/utils/reactionCleanupTrackingCommon.ts", "../../../../../../../../node_modules/mobx-react-lite/src/utils/createReactionCleanupTrackingUsingFinalizationRegister.ts", "../../../../../../../../node_modules/mobx-react-lite/src/utils/createTimerBasedReactionCleanupTracking.ts", "../../../../../../../../node_modules/mobx-react-lite/src/utils/reactionCleanupTracking.ts", "../../../../../../../../node_modules/mobx-react-lite/src/staticRendering.ts", "../../../../../../../../node_modules/mobx-react-lite/src/observer.ts", "../../../../../../../../node_modules/mobx-react-lite/src/ObserverComponent.ts", "../../../../../../../../node_modules/mobx-react-lite/src/useLocalObservable.ts", "../../../../../../../../node_modules/mobx-react-lite/src/useLocalStore.ts", "../../../../../../../../node_modules/mobx-react-lite/src/useAsObservableSource.ts", "../../../../../../../../node_modules/mobx-react-lite/src/index.ts", "../../../../../../../../node_modules/mobx-react/src/utils/utils.ts", "../../../../../../../../node_modules/mobx-react/src/observerClass.ts", "../../../../../../../../node_modules/mobx-react/src/observer.tsx", "../../../../../../../../node_modules/mobx-react/src/Provider.tsx", "../../../../../../../../node_modules/mobx-react/src/inject.ts", "../../../../../../../../node_modules/mobx-react/src/disposeOnUnmount.ts", "../../../../../../../../node_modules/mobx-react/src/propTypes.ts", "../../../../../../../../node_modules/mobx-react/src/index.ts"],
  "sourcesContent": [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "let symbolId = 0\nfunction createSymbol(name: string): symbol | string {\n    if (typeof Symbol === \"function\") {\n        return Symbol(name)\n    }\n    const symbol = `__$mobx-react ${name} (${symbolId})`\n    symbolId++\n    return symbol\n}\n\nconst createdSymbols = {}\nexport function newSymbol(name: string): symbol | string {\n    if (!createdSymbols[name]) {\n        createdSymbols[name] = createSymbol(name)\n    }\n    return createdSymbols[name]\n}\n\nexport function shallowEqual(objA: any, objB: any): boolean {\n    //From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n    if (is(objA, objB)) {\n        return true\n    }\n    if (typeof objA !== \"object\" || objA === null || typeof objB !== \"object\" || objB === null) {\n        return false\n    }\n    const keysA = Object.keys(objA)\n    const keysB = Object.keys(objB)\n    if (keysA.length !== keysB.length) {\n        return false\n    }\n    for (let i = 0; i < keysA.length; i++) {\n        if (!Object.hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n            return false\n        }\n    }\n    return true\n}\n\nfunction is(x: any, y: any): boolean {\n    // From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n    if (x === y) {\n        return x !== 0 || 1 / x === 1 / y\n    } else {\n        return x !== x && y !== y\n    }\n}\n\n// based on https://github.com/mridgway/hoist-non-react-statics/blob/master/src/index.js\nconst hoistBlackList = {\n    $$typeof: 1,\n    render: 1,\n    compare: 1,\n    type: 1,\n    childContextTypes: 1,\n    contextType: 1,\n    contextTypes: 1,\n    defaultProps: 1,\n    getDefaultProps: 1,\n    getDerivedStateFromError: 1,\n    getDerivedStateFromProps: 1,\n    mixins: 1,\n    displayName: 1,\n    propTypes: 1\n}\n\nexport function copyStaticProperties(base: object, target: object): void {\n    const protoProps = Object.getOwnPropertyNames(Object.getPrototypeOf(base))\n    Object.getOwnPropertyNames(base).forEach(key => {\n        if (!hoistBlackList[key] && protoProps.indexOf(key) === -1) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(base, key)!)\n        }\n    })\n}\n\n/**\n * Helper to set `prop` to `this` as non-enumerable (hidden prop)\n * @param target\n * @param prop\n * @param value\n */\nexport function setHiddenProp(target: object, prop: any, value: any): void {\n    if (!Object.hasOwnProperty.call(target, prop)) {\n        Object.defineProperty(target, prop, {\n            enumerable: false,\n            configurable: true,\n            writable: true,\n            value\n        })\n    } else {\n        target[prop] = value\n    }\n}\n\n/**\n * Utilities for patching componentWillUnmount, to make sure @disposeOnUnmount works correctly icm with user defined hooks\n * and the handler provided by mobx-react\n */\nconst mobxMixins = newSymbol(\"patchMixins\")\nconst mobxPatchedDefinition = newSymbol(\"patchedDefinition\")\n\nexport interface Mixins extends Record<string, any> {\n    locks: number\n    methods: Array<Function>\n}\n\nfunction getMixins(target: object, methodName: string): Mixins {\n    const mixins = (target[mobxMixins] = target[mobxMixins] || {})\n    const methodMixins = (mixins[methodName] = mixins[methodName] || {})\n    methodMixins.locks = methodMixins.locks || 0\n    methodMixins.methods = methodMixins.methods || []\n    return methodMixins\n}\n\nfunction wrapper(realMethod: Function, mixins: Mixins, ...args: Array<any>) {\n    // locks are used to ensure that mixins are invoked only once per invocation, even on recursive calls\n    mixins.locks++\n\n    try {\n        let retVal\n        if (realMethod !== undefined && realMethod !== null) {\n            retVal = realMethod.apply(this, args)\n        }\n\n        return retVal\n    } finally {\n        mixins.locks--\n        if (mixins.locks === 0) {\n            mixins.methods.forEach(mx => {\n                mx.apply(this, args)\n            })\n        }\n    }\n}\n\nfunction wrapFunction(realMethod: Function, mixins: Mixins): (...args: Array<any>) => any {\n    const fn = function (...args: Array<any>) {\n        wrapper.call(this, realMethod, mixins, ...args)\n    }\n    return fn\n}\n\nexport function patch(target: object, methodName: string, mixinMethod: Function): void {\n    const mixins = getMixins(target, methodName)\n\n    if (mixins.methods.indexOf(mixinMethod) < 0) {\n        mixins.methods.push(mixinMethod)\n    }\n\n    const oldDefinition = Object.getOwnPropertyDescriptor(target, methodName)\n    if (oldDefinition && oldDefinition[mobxPatchedDefinition]) {\n        // already patched definition, do not repatch\n        return\n    }\n\n    const originalMethod = target[methodName]\n    const newDefinition = createDefinition(\n        target,\n        methodName,\n        oldDefinition ? oldDefinition.enumerable : undefined,\n        mixins,\n        originalMethod\n    )\n\n    Object.defineProperty(target, methodName, newDefinition)\n}\n\nfunction createDefinition(\n    target: object,\n    methodName: string,\n    enumerable: any,\n    mixins: Mixins,\n    originalMethod: Function\n): PropertyDescriptor {\n    let wrappedFunc = wrapFunction(originalMethod, mixins)\n\n    return {\n        [mobxPatchedDefinition]: true,\n        get: function () {\n            return wrappedFunc\n        },\n        set: function (value) {\n            if (this === target) {\n                wrappedFunc = wrapFunction(value, mixins)\n            } else {\n                // when it is an instance of the prototype/a child prototype patch that particular case again separately\n                // since we need to store separate values depending on wether it is the actual instance, the prototype, etc\n                // e.g. the method for super might not be the same as the method for the prototype which might be not the same\n                // as the method for the instance\n                const newDefinition = createDefinition(this, methodName, enumerable, mixins, value)\n                Object.defineProperty(this, methodName, newDefinition)\n            }\n        },\n        configurable: true,\n        enumerable: enumerable\n    }\n}\n", "import { PureComponent, Component } from \"react\"\nimport {\n    createAtom,\n    _allowStateChanges,\n    Reaction,\n    $mobx,\n    _allowStateReadsStart,\n    _allowStateReadsEnd\n} from \"mobx\"\nimport { isUsingStaticRendering } from \"mobx-react-lite\"\n\nimport { newSymbol, shallowEqual, setHiddenProp, patch } from \"./utils/utils\"\n\nconst mobxAdminProperty = $mobx || \"$mobx\" // BC\nconst mobxObserverProperty = newSymbol(\"isMobXReactObserver\")\nconst mobxIsUnmounted = newSymbol(\"isUnmounted\")\nconst skipRenderKey = newSymbol(\"skipRender\")\nconst isForcingUpdateKey = newSymbol(\"isForcingUpdate\")\n\nexport function makeClassComponentObserver(\n    componentClass: React.ComponentClass<any, any>\n): React.ComponentClass<any, any> {\n    const target = componentClass.prototype\n\n    if (componentClass[mobxObserverProperty]) {\n        const displayName = getDisplayName(target)\n        console.warn(\n            `The provided component class (${displayName})\n                has already been declared as an observer component.`\n        )\n    } else {\n        componentClass[mobxObserverProperty] = true\n    }\n\n    if (target.componentWillReact) {\n        throw new Error(\"The componentWillReact life-cycle event is no longer supported\")\n    }\n    if (componentClass[\"__proto__\"] !== PureComponent) {\n        if (!target.shouldComponentUpdate) {\n            target.shouldComponentUpdate = observerSCU\n        } else if (target.shouldComponentUpdate !== observerSCU) {\n            // n.b. unequal check, instead of existence check, as @observer might be on superclass as well\n            throw new Error(\n                \"It is not allowed to use shouldComponentUpdate in observer based components.\"\n            )\n        }\n    }\n\n    // this.props and this.state are made observable, just to make sure @computed fields that\n    // are defined inside the component, and which rely on state or props, re-compute if state or props change\n    // (otherwise the computed wouldn't update and become stale on props change, since props are not observable)\n    // However, this solution is not without it's own problems: https://github.com/mobxjs/mobx-react/issues?utf8=%E2%9C%93&q=is%3Aissue+label%3Aobservable-props-or-not+\n    makeObservableProp(target, \"props\")\n    makeObservableProp(target, \"state\")\n    if (componentClass.contextType) {\n        makeObservableProp(target, \"context\")\n    }\n\n    const originalRender = target.render\n    if (typeof originalRender !== \"function\") {\n        const displayName = getDisplayName(target)\n        throw new Error(\n            `[mobx-react] class component (${displayName}) is missing \\`render\\` method.` +\n                `\\n\\`observer\\` requires \\`render\\` being a function defined on prototype.` +\n                `\\n\\`render = () => {}\\` or \\`render = function() {}\\` is not supported.`\n        )\n    }\n    target.render = function () {\n        this.render = isUsingStaticRendering()\n            ? originalRender\n            : createReactiveRender.call(this, originalRender)\n        return this.render()\n    }\n    patch(target, \"componentDidMount\", function () {\n        this[mobxIsUnmounted] = false\n        if (!this.render[mobxAdminProperty]) {\n            // Reaction is re-created automatically during render, but a component can re-mount and skip render #3395.\n            // To re-create the reaction and re-subscribe to relevant observables we have to force an update.\n            Component.prototype.forceUpdate.call(this)\n        }\n    })\n    patch(target, \"componentWillUnmount\", function () {\n        if (isUsingStaticRendering()) {\n            return\n        }\n\n        const reaction = this.render[mobxAdminProperty]\n        if (reaction) {\n            reaction.dispose()\n            // Forces reaction to be re-created on next render\n            this.render[mobxAdminProperty] = null\n        } else {\n            // Render may have been hot-swapped and/or overridden by a subclass.\n            const displayName = getDisplayName(this)\n            console.warn(\n                `The reactive render of an observer class component (${displayName})\n                was overridden after MobX attached. This may result in a memory leak if the\n                overridden reactive render was not properly disposed.`\n            )\n        }\n\n        this[mobxIsUnmounted] = true\n    })\n    return componentClass\n}\n\n// Generates a friendly name for debugging\nfunction getDisplayName(comp: any) {\n    return (\n        comp.displayName ||\n        comp.name ||\n        (comp.constructor && (comp.constructor.displayName || comp.constructor.name)) ||\n        \"<component>\"\n    )\n}\n\nfunction createReactiveRender(originalRender: any) {\n    /**\n     * If props are shallowly modified, react will render anyway,\n     * so atom.reportChanged() should not result in yet another re-render\n     */\n    setHiddenProp(this, skipRenderKey, false)\n    /**\n     * forceUpdate will re-assign this.props. We don't want that to cause a loop,\n     * so detect these changes\n     */\n    setHiddenProp(this, isForcingUpdateKey, false)\n\n    const initialName = getDisplayName(this)\n    const boundOriginalRender = originalRender.bind(this)\n\n    let isRenderingPending = false\n\n    const createReaction = () => {\n        const reaction = new Reaction(`${initialName}.render()`, () => {\n            if (!isRenderingPending) {\n                // N.B. Getting here *before mounting* means that a component constructor has side effects (see the relevant test in misc.test.tsx)\n                // This unidiomatic React usage but React will correctly warn about this so we continue as usual\n                // See #85 / Pull #44\n                isRenderingPending = true\n                if (this[mobxIsUnmounted] !== true) {\n                    let hasError = true\n                    try {\n                        setHiddenProp(this, isForcingUpdateKey, true)\n                        if (!this[skipRenderKey]) {\n                            Component.prototype.forceUpdate.call(this)\n                        }\n                        hasError = false\n                    } finally {\n                        setHiddenProp(this, isForcingUpdateKey, false)\n                        if (hasError) {\n                            reaction.dispose()\n                            // Forces reaction to be re-created on next render\n                            this.render[mobxAdminProperty] = null\n                        }\n                    }\n                }\n            }\n        })\n        reaction[\"reactComponent\"] = this\n        return reaction\n    }\n\n    function reactiveRender() {\n        isRenderingPending = false\n        // Create reaction lazily to support re-mounting #3395\n        const reaction = (reactiveRender[mobxAdminProperty] ??= createReaction())\n        let exception: unknown = undefined\n        let rendering = undefined\n        reaction.track(() => {\n            try {\n                // TODO@major\n                // Optimization: replace with _allowStateChangesStart/End (not available in mobx@6.0.0)\n                rendering = _allowStateChanges(false, boundOriginalRender)\n            } catch (e) {\n                exception = e\n            }\n        })\n        if (exception) {\n            throw exception\n        }\n        return rendering\n    }\n\n    return reactiveRender\n}\n\nfunction observerSCU(nextProps: React.ClassAttributes<any>, nextState: any): boolean {\n    if (isUsingStaticRendering()) {\n        console.warn(\n            \"[mobx-react] It seems that a re-rendering of a React component is triggered while in static (server-side) mode. Please make sure components are rendered only once server-side.\"\n        )\n    }\n    // update on any state changes (as is the default)\n    if (this.state !== nextState) {\n        return true\n    }\n    // update if props are shallowly not equal, inspired by PureRenderMixin\n    // we could return just 'false' here, and avoid the `skipRender` checks etc\n    // however, it is nicer if lifecycle events are triggered like usually,\n    // so we return true here if props are shallowly modified.\n    return !shallowEqual(this.props, nextProps)\n}\n\nfunction makeObservableProp(target: any, propName: string): void {\n    const valueHolderKey = newSymbol(`reactProp_${propName}_valueHolder`)\n    const atomHolderKey = newSymbol(`reactProp_${propName}_atomHolder`)\n    function getAtom() {\n        if (!this[atomHolderKey]) {\n            setHiddenProp(this, atomHolderKey, createAtom(\"reactive \" + propName))\n        }\n        return this[atomHolderKey]\n    }\n    Object.defineProperty(target, propName, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            let prevReadState = false\n\n            // Why this check? BC?\n            // @ts-expect-error\n            if (_allowStateReadsStart && _allowStateReadsEnd) {\n                prevReadState = _allowStateReadsStart(true)\n            }\n            getAtom.call(this).reportObserved()\n\n            // Why this check? BC?\n            // @ts-expect-error\n            if (_allowStateReadsStart && _allowStateReadsEnd) {\n                _allowStateReadsEnd(prevReadState)\n            }\n\n            return this[valueHolderKey]\n        },\n        set: function set(v) {\n            if (!this[isForcingUpdateKey] && !shallowEqual(this[valueHolderKey], v)) {\n                setHiddenProp(this, valueHolderKey, v)\n                setHiddenProp(this, skipRenderKey, true)\n                getAtom.call(this).reportChanged()\n                setHiddenProp(this, skipRenderKey, false)\n            } else {\n                setHiddenProp(this, valueHolderKey, v)\n            }\n        }\n    })\n}\n", "import * as React from \"react\"\nimport { observer as observerLite } from \"mobx-react-lite\"\n\nimport { makeClassComponentObserver } from \"./observerClass\"\nimport { IReactComponent } from \"./types/IReactComponent\"\n\n/**\n * Observer function / decorator\n */\nexport function observer<T extends IReactComponent>(component: T): T {\n    if (component[\"isMobxInjector\"] === true) {\n        console.warn(\n            \"Mobx observer: You are trying to use `observer` on a component that already has `inject`. Please apply `observer` before applying `inject`\"\n        )\n    }\n\n    if (\n        Object.prototype.isPrototypeOf.call(React.Component, component) ||\n        Object.prototype.isPrototypeOf.call(React.PureComponent, component)\n    ) {\n        // Class component\n        return makeClassComponentObserver(component as React.ComponentClass<any, any>) as T\n    } else {\n        // Function component\n        return observerLite(component as React.FunctionComponent<any>) as T\n    }\n}\n", "import React from \"react\"\nimport { shallowEqual } from \"./utils/utils\"\nimport { IValueMap } from \"./types/IValueMap\"\n\nexport const MobXProviderContext = React.createContext<IValueMap>({})\n\nexport interface ProviderProps extends IValueMap {\n    children: React.ReactNode\n}\n\nexport function Provider(props: ProviderProps) {\n    const { children, ...stores } = props\n    const parentValue = React.useContext(MobXProviderContext)\n    const mutableProviderRef = React.useRef({ ...parentValue, ...stores })\n    const value = mutableProviderRef.current\n\n    if (__DEV__) {\n        const newValue = { ...value, ...stores } // spread in previous state for the context based stores\n        if (!shallowEqual(value, newValue)) {\n            throw new Error(\n                \"MobX Provider: The set of provided stores has changed. See: https://github.com/mobxjs/mobx-react#the-set-of-provided-stores-has-changed-error.\"\n            )\n        }\n    }\n\n    return <MobXProviderContext.Provider value={value}>{children}</MobXProviderContext.Provider>\n}\n\nProvider.displayName = \"MobXProvider\"\n", "import React from \"react\"\nimport { observer } from \"./observer\"\nimport { copyStaticProperties } from \"./utils/utils\"\nimport { MobXProviderContext } from \"./Provider\"\nimport { IReactComponent } from \"./types/IReactComponent\"\nimport { IValueMap } from \"./types/IValueMap\"\nimport { IWrappedComponent } from \"./types/IWrappedComponent\"\nimport { IStoresToProps } from \"./types/IStoresToProps\"\n\n/**\n * Store Injection\n */\nfunction createStoreInjector(\n    grabStoresFn: IStoresToProps,\n    component: IReactComponent<any>,\n    injectNames: string,\n    makeReactive: boolean\n): IReactComponent<any> {\n    // Support forward refs\n    let Injector: IReactComponent<any> = React.forwardRef((props, ref) => {\n        const newProps = { ...props }\n        const context = React.useContext(MobXProviderContext)\n        Object.assign(newProps, grabStoresFn(context || {}, newProps) || {})\n\n        if (ref) {\n            newProps.ref = ref\n        }\n\n        return React.createElement(component, newProps)\n    })\n\n    if (makeReactive) Injector = observer(Injector)\n    Injector[\"isMobxInjector\"] = true // assigned late to suppress observer warning\n\n    // Static fields from component should be visible on the generated Injector\n    copyStaticProperties(component, Injector)\n    Injector[\"wrappedComponent\"] = component\n    Injector.displayName = getInjectName(component, injectNames)\n    return Injector\n}\n\nfunction getInjectName(component: IReactComponent<any>, injectNames: string): string {\n    let displayName\n    const componentName =\n        component.displayName ||\n        component.name ||\n        (component.constructor && component.constructor.name) ||\n        \"Component\"\n    if (injectNames) displayName = \"inject-with-\" + injectNames + \"(\" + componentName + \")\"\n    else displayName = \"inject(\" + componentName + \")\"\n    return displayName\n}\n\nfunction grabStoresByName(\n    storeNames: Array<string>\n): (\n    baseStores: IValueMap,\n    nextProps: React.ClassAttributes<any>\n) => React.PropsWithRef<any> | undefined {\n    return function (baseStores, nextProps) {\n        storeNames.forEach(function (storeName) {\n            if (\n                storeName in nextProps // prefer props over stores\n            )\n                return\n            if (!(storeName in baseStores))\n                throw new Error(\n                    \"MobX injector: Store '\" +\n                        storeName +\n                        \"' is not available! Make sure it is provided by some Provider\"\n                )\n            nextProps[storeName] = baseStores[storeName]\n        })\n        return nextProps\n    }\n}\n\nexport function inject(\n    ...stores: Array<string>\n): <T extends IReactComponent<any>>(\n    target: T\n) => T & (T extends IReactComponent<infer P> ? IWrappedComponent<P> : never)\nexport function inject<S, P, I, C>(\n    fn: IStoresToProps<S, P, I, C>\n): <T extends IReactComponent>(target: T) => T & IWrappedComponent<P>\n\n/**\n * higher order component that injects stores to a child.\n * takes either a varargs list of strings, which are stores read from the context,\n * or a function that manually maps the available stores from the context to props:\n * storesToProps(mobxStores, props, context) => newProps\n */\nexport function inject(/* fn(stores, nextProps) or ...storeNames */ ...storeNames: Array<any>) {\n    if (typeof arguments[0] === \"function\") {\n        let grabStoresFn = arguments[0]\n        return (componentClass: React.ComponentClass<any, any>) =>\n            createStoreInjector(grabStoresFn, componentClass, grabStoresFn.name, true)\n    } else {\n        return (componentClass: React.ComponentClass<any, any>) =>\n            createStoreInjector(\n                grabStoresByName(storeNames),\n                componentClass,\n                storeNames.join(\"-\"),\n                false\n            )\n    }\n}\n", "import React from \"react\"\nimport { patch, newSymbol } from \"./utils/utils\"\n\ntype Disposer = () => void\n\nconst protoStoreKey = newSymbol(\"disposeOnUnmountProto\")\nconst instStoreKey = newSymbol(\"disposeOnUnmountInst\")\n\nfunction runDisposersOnWillUnmount() {\n    ;[...(this[protoStoreKey] || []), ...(this[instStoreKey] || [])].forEach(propKeyOrFunction => {\n        const prop =\n            typeof propKeyOrFunction === \"string\" ? this[propKeyOrFunction] : propKeyOrFunction\n        if (prop !== undefined && prop !== null) {\n            if (Array.isArray(prop)) prop.map(f => f())\n            else prop()\n        }\n    })\n}\n\nexport function disposeOnUnmount(target: React.Component<any, any>, propertyKey: PropertyKey): void\nexport function disposeOnUnmount<TF extends Disposer | Array<Disposer>>(\n    target: React.Component<any, any>,\n    fn: TF\n): TF\n\nexport function disposeOnUnmount(\n    target: React.Component<any, any>,\n    propertyKeyOrFunction: PropertyKey | Disposer | Array<Disposer>\n): PropertyKey | Disposer | Array<Disposer> | void {\n    if (Array.isArray(propertyKeyOrFunction)) {\n        return propertyKeyOrFunction.map(fn => disposeOnUnmount(target, fn))\n    }\n\n    const c = Object.getPrototypeOf(target).constructor\n    const c2 = Object.getPrototypeOf(target.constructor)\n    // Special case for react-hot-loader\n    const c3 = Object.getPrototypeOf(Object.getPrototypeOf(target))\n    if (\n        !(\n            c === React.Component ||\n            c === React.PureComponent ||\n            c2 === React.Component ||\n            c2 === React.PureComponent ||\n            c3 === React.Component ||\n            c3 === React.PureComponent\n        )\n    ) {\n        throw new Error(\n            \"[mobx-react] disposeOnUnmount only supports direct subclasses of React.Component or React.PureComponent.\"\n        )\n    }\n\n    if (\n        typeof propertyKeyOrFunction !== \"string\" &&\n        typeof propertyKeyOrFunction !== \"function\" &&\n        !Array.isArray(propertyKeyOrFunction)\n    ) {\n        throw new Error(\n            \"[mobx-react] disposeOnUnmount only works if the parameter is either a property key or a function.\"\n        )\n    }\n\n    // decorator's target is the prototype, so it doesn't have any instance properties like props\n    const isDecorator = typeof propertyKeyOrFunction === \"string\"\n\n    // add property key / function we want run (disposed) to the store\n    const componentWasAlreadyModified = !!target[protoStoreKey] || !!target[instStoreKey]\n    const store = isDecorator\n        ? // decorators are added to the prototype store\n          target[protoStoreKey] || (target[protoStoreKey] = [])\n        : // functions are added to the instance store\n          target[instStoreKey] || (target[instStoreKey] = [])\n\n    store.push(propertyKeyOrFunction)\n\n    // tweak the component class componentWillUnmount if not done already\n    if (!componentWasAlreadyModified) {\n        patch(target, \"componentWillUnmount\", runDisposersOnWillUnmount)\n    }\n\n    // return the disposer as is if invoked as a non decorator\n    if (typeof propertyKeyOrFunction !== \"string\") {\n        return propertyKeyOrFunction\n    }\n}\n", "import { isObservableArray, isObservableObject, isObservableMap, untracked } from \"mobx\"\n\n// Copied from React.PropTypes\nfunction createChainableTypeChecker(validator: React.Validator<any>): React.Requireable<any> {\n    function checkType(\n        isRequired: boolean,\n        props: any,\n        propName: string,\n        componentName: string,\n        location: string,\n        propFullName: string,\n        ...rest: any[]\n    ) {\n        return untracked(() => {\n            componentName = componentName || \"<<anonymous>>\"\n            propFullName = propFullName || propName\n            if (props[propName] == null) {\n                if (isRequired) {\n                    const actual = props[propName] === null ? \"null\" : \"undefined\"\n                    return new Error(\n                        \"The \" +\n                            location +\n                            \" `\" +\n                            propFullName +\n                            \"` is marked as required \" +\n                            \"in `\" +\n                            componentName +\n                            \"`, but its value is `\" +\n                            actual +\n                            \"`.\"\n                    )\n                }\n                return null\n            } else {\n                // @ts-ignore rest arg is necessary for some React internals - fails tests otherwise\n                return validator(props, propName, componentName, location, propFullName, ...rest)\n            }\n        })\n    }\n\n    const chainedCheckType: any = checkType.bind(null, false)\n    // Add isRequired to satisfy Requirable\n    chainedCheckType.isRequired = checkType.bind(null, true)\n    return chainedCheckType\n}\n\n// Copied from React.PropTypes\nfunction isSymbol(propType: any, propValue: any): boolean {\n    // Native Symbol.\n    if (propType === \"symbol\") {\n        return true\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue[\"@@toStringTag\"] === \"Symbol\") {\n        return true\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === \"function\" && propValue instanceof Symbol) {\n        return true\n    }\n\n    return false\n}\n\n// Copied from React.PropTypes\nfunction getPropType(propValue: any): string {\n    const propType = typeof propValue\n    if (Array.isArray(propValue)) {\n        return \"array\"\n    }\n    if (propValue instanceof RegExp) {\n        // Old webkits (at least until Android 4.0) return 'function' rather than\n        // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n        // passes PropTypes.object.\n        return \"object\"\n    }\n    if (isSymbol(propType, propValue)) {\n        return \"symbol\"\n    }\n    return propType\n}\n\n// This handles more types than `getPropType`. Only used for error messages.\n// Copied from React.PropTypes\nfunction getPreciseType(propValue: any): string {\n    const propType = getPropType(propValue)\n    if (propType === \"object\") {\n        if (propValue instanceof Date) {\n            return \"date\"\n        } else if (propValue instanceof RegExp) {\n            return \"regexp\"\n        }\n    }\n    return propType\n}\n\nfunction createObservableTypeCheckerCreator(\n    allowNativeType: any,\n    mobxType: any\n): React.Requireable<any> {\n    return createChainableTypeChecker((props, propName, componentName, location, propFullName) => {\n        return untracked(() => {\n            if (allowNativeType) {\n                if (getPropType(props[propName]) === mobxType.toLowerCase()) return null\n            }\n            let mobxChecker\n            switch (mobxType) {\n                case \"Array\":\n                    mobxChecker = isObservableArray\n                    break\n                case \"Object\":\n                    mobxChecker = isObservableObject\n                    break\n                case \"Map\":\n                    mobxChecker = isObservableMap\n                    break\n                default:\n                    throw new Error(`Unexpected mobxType: ${mobxType}`)\n            }\n            const propValue = props[propName]\n            if (!mobxChecker(propValue)) {\n                const preciseType = getPreciseType(propValue)\n                const nativeTypeExpectationMessage = allowNativeType\n                    ? \" or javascript `\" + mobxType.toLowerCase() + \"`\"\n                    : \"\"\n                return new Error(\n                    \"Invalid prop `\" +\n                        propFullName +\n                        \"` of type `\" +\n                        preciseType +\n                        \"` supplied to\" +\n                        \" `\" +\n                        componentName +\n                        \"`, expected `mobx.Observable\" +\n                        mobxType +\n                        \"`\" +\n                        nativeTypeExpectationMessage +\n                        \".\"\n                )\n            }\n            return null\n        })\n    })\n}\n\nfunction createObservableArrayOfTypeChecker(\n    allowNativeType: boolean,\n    typeChecker: React.Validator<any>\n) {\n    return createChainableTypeChecker(\n        (props, propName, componentName, location, propFullName, ...rest) => {\n            return untracked(() => {\n                if (typeof typeChecker !== \"function\") {\n                    return new Error(\n                        \"Property `\" +\n                            propFullName +\n                            \"` of component `\" +\n                            componentName +\n                            \"` has \" +\n                            \"invalid PropType notation.\"\n                    )\n                } else {\n                    let error = createObservableTypeCheckerCreator(allowNativeType, \"Array\")(\n                        props,\n                        propName,\n                        componentName,\n                        location,\n                        propFullName\n                    )\n\n                    if (error instanceof Error) return error\n                    const propValue = props[propName]\n                    for (let i = 0; i < propValue.length; i++) {\n                        error = (typeChecker as React.Validator<any>)(\n                            propValue,\n                            i as any,\n                            componentName,\n                            location,\n                            propFullName + \"[\" + i + \"]\",\n                            ...rest\n                        )\n                        if (error instanceof Error) return error\n                    }\n\n                    return null\n                }\n            })\n        }\n    )\n}\n\nconst observableArray = createObservableTypeCheckerCreator(false, \"Array\")\nconst observableArrayOf = createObservableArrayOfTypeChecker.bind(null, false)\nconst observableMap = createObservableTypeCheckerCreator(false, \"Map\")\nconst observableObject = createObservableTypeCheckerCreator(false, \"Object\")\nconst arrayOrObservableArray = createObservableTypeCheckerCreator(true, \"Array\")\nconst arrayOrObservableArrayOf = createObservableArrayOfTypeChecker.bind(null, true)\nconst objectOrObservableObject = createObservableTypeCheckerCreator(true, \"Object\")\n\nexport const PropTypes = {\n    observableArray,\n    observableArrayOf,\n    observableMap,\n    observableObject,\n    arrayOrObservableArray,\n    arrayOrObservableArrayOf,\n    objectOrObservableObject\n}\n", "import { observable } from \"mobx\"\nimport { Component } from \"react\"\n\nif (!Component) throw new Error(\"mobx-react requires React to be available\")\nif (!observable) throw new Error(\"mobx-react requires mobx to be available\")\n\nexport {\n    Observer,\n    useObserver,\n    useAsObservableSource,\n    useLocalStore,\n    isUsingStaticRendering,\n    useStaticRendering,\n    enableStaticRendering,\n    observerBatching,\n    useLocalObservable\n} from \"mobx-react-lite\"\n\nexport { observer } from \"./observer\"\n\nexport { MobXProviderContext, Provider, ProviderProps } from \"./Provider\"\nexport { inject } from \"./inject\"\nexport { disposeOnUnmount } from \"./disposeOnUnmount\"\nexport { PropTypes } from \"./propTypes\"\nexport { IWrappedComponent } from \"./types/IWrappedComponent\"\n"],
  "mappings": "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",
  "names": ["import_react", "FinalizationRegistry", "forceCleanupTimerToRunNowForTests", "resetCleanupScheduleForTests", "recordReactionAsCommitted", "ObjectToBeRetainedByReact", "_a", "React", "import_react", "_a", "_a", "import_react", "import_react", "import_react", "_a", "__read", "useObserver", "symbolId", "createSymbol", "name", "Symbol", "symbol", "createdSymbols", "newSymbol", "shallowEqual", "objA", "objB", "is", "keysA", "Object", "keys", "keysB", "length", "i", "hasOwnProperty", "call", "x", "y", "hoistBlackList", "$$typeof", "render", "compare", "type", "childContextTypes", "contextType", "contextTypes", "defaultProps", "getDefaultProps", "getDerivedStateFromError", "getDerivedStateFromProps", "mixins", "displayName", "propTypes", "copyStaticProperties", "base", "target", "protoProps", "getOwnPropertyNames", "getPrototypeOf", "forEach", "key", "indexOf", "defineProperty", "getOwnPropertyDescriptor", "setHiddenProp", "prop", "value", "enumerable", "configurable", "writable", "mobxMixins", "mobxPatchedDefinition", "getMixins", "methodName", "methodMixins", "locks", "methods", "wrapper", "realMethod", "args", "retVal", "undefined", "apply", "mx", "wrapFunction", "fn", "patch", "mixinMethod", "push", "oldDefinition", "originalMethod", "newDefinition", "createDefinition", "wrappedFunc", "get", "set", "mobxAdminProperty", "$mobx", "mobxObserverProperty", "mobxIsUnmounted", "skipRenderKey", "isForcingUpdateKey", "makeClassComponentObserver", "componentClass", "prototype", "getDisplayName", "console", "warn", "componentWillReact", "Error", "PureComponent", "shouldComponentUpdate", "observerSCU", "makeObservableProp", "originalRender", "isUsingStaticRendering", "createReactiveRender", "Component", "forceUpdate", "reaction", "dispose", "comp", "constructor", "initialName", "boundOriginalRender", "bind", "isRenderingPending", "createReaction", "Reaction", "hasError", "reactiveRender", "exception", "rendering", "track", "_allowStateChanges", "e", "nextProps", "nextState", "state", "props", "propName", "valueHolderKey", "atomHolderKey", "getAtom", "createAtom", "prevReadState", "_allowStateReadsStart", "_allowStateReadsEnd", "reportObserved", "v", "reportChanged", "observer", "component", "isPrototypeOf", "React", "observerLite", "MobXProviderContext", "createContext", "Provider", "children", "stores", "parentValue", "useContext", "mutableProviderRef", "useRef", "current", "newValue", "createStoreInjector", "grabStoresFn", "injectNames", "makeReactive", "Injector", "forwardRef", "ref", "newProps", "context", "assign", "createElement", "getInjectName", "componentName", "grabStoresByName", "storeNames", "baseStores", "storeName", "inject", "arguments", "join", "protoStoreKey", "instStoreKey", "runDisposersOnWillUnmount", "propKeyOrFunction", "Array", "isArray", "map", "f", "disposeOnUnmount", "propertyKeyOrFunction", "c", "c2", "c3", "isDecorator", "componentWasAlreadyModified", "store", "createChainableTypeChecker", "validator", "checkType", "isRequired", "location", "propFullName", "rest", "untracked", "actual", "chainedCheckType", "isSymbol", "propType", "propValue", "getPropType", "RegExp", "getPreciseType", "Date", "createObservableTypeCheckerCreator", "allowNativeType", "mobxType", "toLowerCase", "mobxChecker", "isObservableArray", "isObservableObject", "isObservableMap", "preciseType", "nativeTypeExpectationMessage", "createObservableArrayOfTypeChecker", "typeChecker", "error", "observableArray", "observableArrayOf", "observableMap", "observableObject", "arrayOrObservableArray", "arrayOrObservableArrayOf", "objectOrObservableObject", "PropTypes", "observable"]
}
